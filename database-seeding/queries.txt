Normal Queries:
1. Average sales by hour:
    SELECT hour, AVG(price) avg_order_price
    FROM "order"
    WHERE hour = 1
    GROUP BY hour;

2. Averages sales by month:
    SELECT month, AVG(price) avg_order_price
    FROM "order"
    WHERE month = 11
    GROUP BY month;

3. Total sales by month
    SELECT month, SUM(price) total_sales
    FROM "order"
    WHERE month = 2
    GROUP BY month;

4. Average price per order on a specific day and month
    SELECT day, month, AVG(price) avg_order_price
    FROM "order"
    WHERE day = 1 AND month = 1
    GROUP BY day, month;

5. Total sales on a specific day and month
    SELECT day, month, SUM(price) total_sales
    FROM "order"
    WHERE day = 20 AND month = 8
    GROUP BY day, month;

6. Get list of employees that are managers
    SELECT *
    FROM employee
    WHERE isManager;

7. Get list of employees that are not managers
    SELECT *
    FROM employee
    WHERE NOT isManager;

8. Get sum of item stocks across all items in inventory
    SELECT SUM(availablestock) total_inventory_stock
    FROM inventoryitem;

9. Get total stock of a specific inventory item
    SELECT itemname, availablestock
    FROM inventoryitem
    WHERE itemname = 'Napkin';

10. Get number of orders that have a specific menu item (e.g., contains orange chicken)
    SELECT mi.itemname menu_item, COUNT(DISTINCT o.orderid) orders
    FROM "order" o
    JOIN ordertomenuitem otm ON o.orderid = otm.orderid
    JOIN menuitem mi ON otm.menuitemid = mi.menuitemid
    WHERE mi.itemname = 'Fried Rice'
    GROUP BY mi.itemname;

11. Get 10 days with the least total sales
    SELECT day, week, month, SUM(price) AS total_sales
    FROM "order"
    GROUP BY day, week, month
    ORDER BY total_sales ASC
    LIMIT 10;


Special Queries:
1. Get count of orders on a specific week: 
    SELECT week, COUNT(*) num_orders
    FROM "order"
    WHERE week = 1
    GROUP BY week;
    
2. Given a specific hour, get total order count and total order amount:
    SELECT hour, COUNT(*) total_orders, SUM(price) total_amount
    FROM "order"
    WHERE hour = 6
    GROUP BY hour;

3. Given a specific day, get the sum of the price top 10 orders:
    SELECT day, month, SUM(price) as top_10_total
    FROM (
        SELECT day, month, price
        FROM "order"
        WHERE day = 30 AND month = 8
        ORDER BY price DESC
        LIMIT 10
    ) AS top_10_orders
    GROUP BY day, month;

4. How many inventory items does a specific menu item use:
    SELECT m.itemname item_name, COUNT(*) inventory_items_used
    FROM "menuitemtoinventoryitem" mi
    JOIN "menuitem" m ON m.menuitemid = mi.menuitemid
    WHERE m.itemname = 'Beijing Beef'
    GROUP BY m.itemname;